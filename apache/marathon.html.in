<!DOCTYPE html>
<html>
  <head>
    <title>Linda - Lincoln's Patrol Bot</title>
    <meta charset="utf-8" />
    <META HTTP-EQUIV="Pragma" CONTENT="no-cache">
    <META HTTP-EQUIV="Expires" CONTENT="-1">

    <!-- The default styling is provided by http://getbootstrap.com -->
    <link href="css/bootstrap.css" rel="stylesheet">
    <link href="css/main.css" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="css/jquery-ui.css" />

    <!-- jQuery and display.js are conveniences for interacting with the DOM -->
    <script src="js/jquery.js"></script>
    <script src="js/display.js"></script>

    <script type="text/javascript" src="js/jquery-ui.js"></script>

    <!-- ROSLIBJS -->
    <!-- EventEmitter2 is the sole dependency of roslibjs -->
    <script src="roslibjs/include/EventEmitter2/eventemitter2.js"></script>
    <!-- Roslibjs handles core ROS functionality in the browser -->
    <script src="roslibjs/build/roslib.js"></script>

    <!-- ROS2DJS -->
    <!-- EaselJS is a dependency of ros2djs -->
    <script src="ros2djs/include/EaselJS/easeljs.js"></script>
    <!-- Ros2djs provides 2D scene support, including mapping and more -->
    <script src="ros2djs/build/ros2d.js"></script>

    <!-- ROS3DJS -->
    <!-- Three.js is the WebGL rendering library -->
    <script src="ros3djs/include/threejs/three.js"></script>
    <!-- ColladaLoader2 loads collada models of the robot -->
    <script src="ros3djs/include/ColladaAnimationCompress/ColladaLoader2.js"></script>
    <!-- Ros3djs provides 3D scene support, including mapping and more -->
    <script src="ros3djs/build/ros3d.min.js"></script>
    
    <script type="text/javascript" src="mjpegcanvasjs/build/mjpegcanvas.min.js"></script>

    <script type="text/javascript" src="keyboardteleopjs/build/keyboardteleop.min.js"></script>

    <script type="text/javascript" src="js/ptu_keyboardteleop.js"></script>

    <script type="text/javascript">
      var hostname = location.hostname;

      /**
      * Setup all GUI elements when the page is loaded.
      */
      function init() {
      // Connecting to ROS.
      var ros = new ROSLIB.Ros({
      url : 'ws://'+hostname+'@ROSWS@'
      });

 
      // ----------------------------------------------------------------------
      // Subscribing to the robot's Pose
      // ----------------------------------------------------------------------

      // The ROSLIB.Topic handles subscribing and publishing a ROS topic. This
      // topic interacts with the /robot_pose topic, published by the robot.
      var poseTopic = new ROSLIB.Topic({
      ros         : ros,
      name        : '@WT_POSE@',
      messageType : 'geometry_msgs/PoseWithCovarianceStamped'
      });

      // Subscribes to the robot's pose. When rosbridge receives the pose
      // message from ROS, it forwards the message to roslibjs, which calls this
      // callback.
	/*
      poseTopic.subscribe(function(message) { 
      // Formats the pose for outputting.
      var now = new Date();
      var position = 'x: ' + message.pose.pose.position.x
      + ', y: ' + message.pose.pose.position.y
      + ', z: 0.0';
      var orientation = 'x: ' + message.pose.pose.orientation.x
      + ', y: ' + message.pose.pose.orientation.y
      + ', z: ' + message.pose.pose.orientation.z
      + ', w: ' + message.pose.pose.orientation.w;
      // Prepends a row to the "poses" table with the formatted pose.
      $('#poses > tbody > tr:first').after('<tr>'
        + '<td>' + now.toLocaleTimeString() + '</td>'
        + '<td>' + position + '</td>'
        + '<td>' + orientation + '</td>');
        });
*/
      var mileTopic = new ROSLIB.Topic({
      ros         : ros,
      name        : '/webthrottle/mileage',
      messageType : 'std_msgs/Float32'
      });

      // Subscribes to the robot's pose. When rosbridge receives the pose
      // message from ROS, it forwards the message to roslibjs, which calls this
      // callback.
      mileTopic.subscribe(function(message) {
      // Formats the pose for outputting.
      var mileage = 'current mileage: ' + message.data + ' metres travelled';
      
      $('#mileage').html(mileage);
        });

        // ----------------------------------------------------------------------
        // Create the camera viewer.
        // ----------------------------------------------------------------------


        var viewer = new MJPEGCANVAS.Viewer({
        divID : 'mjpeg',
        host : hostname,
        port : '@MJPEG_URL@',
        width : 560,
        height : 420,
        topic : '@WT_MJPEG_TOPIC@'
        });
        
        
        // ----------------------------------------------------------------------
        // Rendering the robot in 3D
        // ----------------------------------------------------------------------

        // Create the scene manager and view port for the 3D world.
        var viewer3D = new ROS3D.Viewer({
        divID      : 'threed-map',
        width      : 560,
        height     : 420,
        antialias  : true,
        background : '#EEEEEE'
        });

        // Create a TF client that subscribes to the fixed frame.
        var tfClient = new ROSLIB.TFClient({
        ros          : ros,
        angularThres : 0.1,
        transThres   : 0.1,
        rate         : 1.0,
        fixedFrame   : '/map'
        });


        // Add the URDF model of the robot.
        var urdfClient = new ROS3D.UrdfClient({
        ros        : ros,
        tfClient   : tfClient,
        rootObject : viewer3D.scene
        });

        var colorMaterial = ROS3D.makeColorMaterial(1, 0, 0,0.5);

        // Track robot pose with an arrow
        var arrowNode = new ROS3D.SceneNode({
        tfClient : tfClient,
        frameID  : '/base_link',
        object   : new ROS3D.Arrow({
        length : 0.3,
        material : colorMaterial
        }),        
        });

        viewer3D.scene.add(arrowNode);


        // ----------------------------------------------------------------------
        // Rendering the map in 3D
        // ----------------------------------------------------------------------

        // Add the Occupancy Grid map.
        var grid = new ROS3D.OccupancyGridClient({
        ros        : ros,
        tfClient   : tfClient,
        rootObject : viewer3D.scene
        });
        grid.on('change', function() {
        // Change the opacity level.
        grid.currentGrid.children[0].material.transparent = false;
        grid.currentGrid.children[0].material.opacity = 0.85;
        grid.currentGrid.children[0].material.needsUpdate = true;
        });
        }
    </script>
  </head>

  <body onload="init()">
	<div id="fb-root"></div>
	<script>(function(d, s, id) {
	  var js, fjs = d.getElementsByTagName(s)[0];
	  if (d.getElementById(id)) return;
	  js = d.createElement(s); js.id = id;
	  js.src = "//connect.facebook.net/en_GB/all.js#xfbml=1";
	  fjs.parentNode.insertBefore(js, fjs);
	}(document, 'script', 'facebook-jssdk'));
	</script>

    <div class="navbar navbar-inverse navbar-fixed-top">
      <a class="navbar-brand" href="#"><img src="@LOGO_URL@"/></a>      
      <ul class="nav pull-right">
        <li class="active"><a href="marathon.html">Marathon</a></li>
        <!--<li><a href="navigation.html">Autonomous</a></li>-->
      </ul>
    </div>
    <div class="container">
      <div class="row">
	<H1><font color="red">BETA WEBSITE, subject to continuous modification and only available occasionally for now</font></H1>
      <!--<h1><small>Simple keyboard control</small></h1>
      <div class="row">
        <div class="col-span-6">
          <h2><small>Robot</small></h2>
          <ul>
            <li><strong>w/s</strong>  to move forward and backward</li>
            <li><strong>a/d</strong>  to move left and right</li>
          </ul>
        </div>
        <div class="col-span-6">
          <h2><small>PTU</small></h2>
          <ul>
            <li><strong>j/k</strong>  to move the PTU down and up</li>
            <li><strong>h/l</strong>  to move the PTU left and right</li>
            <li><strong>o</strong>    to move the PTU to the default pose</li>
          </ul>
        </div>
      </div>
	-->
      <!-- <div id="speed-label"></div>
      <div id="speed-slider"></div>-->
      <br/>
	<!--
      <div class="row">
	<div class="col-span-2">
		<a href="http://strands.acin.tuwien.ac.at/"><img src="http://strands.acin.tuwien.ac.at/logos/strands2.png"/></a>
		<p>
			<div class="fb-like" data-href="http://lcas.lincoln.ac.uk/linda/marathon.html" data-layout="button_count" data-action="like" data-show-faces="true" data-share="true"></div>
			<script type="text/javascript" src="https://apis.google.com/js/plusone.js"></script>
			<g:plusone></g:plusone>
			<a href="https://twitter.com/share" class="twitter-share-button" data-via="LindaStrands" data-related="strands_project" data-dnt="true">Tweet</a>
			<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
		</p>
	</div>
	<div class="col-span-4">
		<a class="twitter-timeline" data-dnt="true" href="https://twitter.com/LindaStrands" data-widget-id="402372847793741825">Tweets by @LindaStrands</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+"://platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>
	</div>
	<div class="col-span-4">
<a class="twitter-timeline" data-dnt="true" href="https://twitter.com/strands_project" data-widget-id="402373765784293377">Tweets by @strands_project</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+"://platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>
</div>
	<div class="col-span-2">
		<iframe src="https://mapsengine.google.com/map/embed?mid=z6XG8OR_zLGs.kbF9OSRyk6dQ" width="220" height="250"></iframe>
	</div>
      </div>
-->

      <div class="row">
        <div class="col-span-6">
          <h1><small>3D map</small></h1>
          <div id="threed-map"></div>
	  <i>Use your mouse to navigate the map. Due to a high load on the server you may have to reload this page, if you cannot see the robot on its map here.</i>
        </div>
        <div class="col-span-6">
          <h1><small>Robot live cam</small></h1>
          <div id="mjpeg"></div>
	  <i>The video is blurred to protect the privacy of our staff in the L-CAS research lab.</i>
        </div>
      </div>

      <div class="row" id="misc-data">
	<h1><small>Mileage</small></h1>
        <div id="mileage">Mileage</div>
      </div>

      <!-- Pose Table
      <div class="row" id="pose-data">
        <div class="col-span-12">
          <h1><small>Robot's Pose</small></h1>
          <table id="poses" class="table table-condensed">
            <thead>
              <tr>
                <th>Time</th>
                <th>Position</th>
                <th>Orientation</th>
              </tr>
            </thead>
            <tbody>
              <tr></tr>
            </tbody>
          </table>
        </div>
      </div>
 -->
      
    </div>

  </body>
</html>
